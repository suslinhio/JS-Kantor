'use strict' 

// F.prototype

/* В цьому розділі було коротко описано шлях для встановлення прихованої властивості [[Prototype]] об’єктів, які були створені за допомогою функції-конструктора. Пізніше, буде надано більше прикладів коду, які покладаються на ці властивості.

Все є простим, тільки додамо декілька штрихів для того щоб усе було зрозуміло:

Властивість об’єкта F.prototype (ні в якому разі не [[Prototype]]) встановлює приховану властивість [[Prototype]] нового об’єкта, тільки тоді, коли буде викликана через new F().
Значення властивості F.prototype може бути, або посиланням на об’єкт, або null: інші значення не працюють.
Тільки властивість "prototype" має такий спеціальний ефект: може встановлюватись в конструкторі та може викликатись через оператор new.
У звичайних об’єктах властивість prototype не є чимось спеціальним:

let user = {
  name: "John",
  prototype: "Bla-bla" // немає ніякої магії
};
За замовчуванням, усі функції мають F.prototype = { constructor: F }, і ми можемо отримати конструктор об’єкта через його властивість "constructor". */